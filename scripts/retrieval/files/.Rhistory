demo()
1 + 2
1 + [1]
1 + it
1 + 1
x = 1
2 + x
x++
x
c(1, 2)
c(1, 2) + c(1, 2)
c(1, 2)++
1
c(1, 2) + 1
x = c(1, 2)
c(x, x)
c(x, x) + 1
c(x + 1, x + 1)
c(x + 1, x)
mtcars
head(mtcars)
head(mtcars + 1)
head(mtcars + mtcars)
head mtcars[1] + 1
mtcars[1] + 1
x = mtcars
x[1] + 1
x
x[1] = x[1] + 1
x
library(Rsubread)
library(rsubread)
library(Rsubread)
install.packages(c("assertthat", "backports", "BH", "boot", "car", "curl", "DBI", "dplyr", "evaluate", "foreign", "formatR", "futile.logger", "glmnet", "haven", "htmlwidgets", "httpuv", "jsonlite", "lambda.r", "lattice", "maps", "MASS", "Matrix", "pbdZMQ", "psych", "purrr", "quantmod", "R6", "Rcpp", "RcppEigen", "readr", "repr", "rpart", "rsconnect", "snow", "SparseM", "stringi", "stringr", "survival", "tibble", "tidyr", "TTR", "xts", "yaml", "zoo"))
library(Rsubread)
map_list = featureCounts(files = c("alignments/LDI25408.bam",  # T0
"alignments/LDI25409.bam",  # T15
"alignments/LDI25410.bam",  # T30
"alignments/LDI25411.bam"), # T1h
annot.ext = "genome/GCF_000009045.1_ASM904v1_genomic.gff",
isGTFAnnotationFile = TRUE,
GTF.featureType = "gene",
GTF.attrType = "locus_tag",
minMQS = 10,
isPairedEnd = TRUE)
install.packages("devtools")
install.packages("devtools", dependencies = TRUE)
install.packages("bindrcpp", dependencies = TRUE)
x <- cars
x
apply(x[1:2], MARGIN = 1, mean)
x
apply(x[1:2], MARGIN = 1, mean)
cars
c < cars[order(cars[,1]),]
c <- cars[order(cars[,1]),]
c
c <- cars[order(-cars[,1]),]
c
c <- cars[order(cars[,2]),]
c
c <- cars[order(cars[,2], cars[,1]),]
c
c <- cars[order(cars[,2], -cars[,1]),]
c
c <- cars[order(c(cars[,2], -cars[,1])),]
c
-c(1,2,3)
library(xlsx)
??xlsx
??hyperlink
??xlsx
??Workbook
??Workbook
??cell
??classifier
??rfe
??rf
??randomforest
{
t <- Sys.time()
for(i in 1:100000) {}
cat(Sys.time() - t)
}
n <- 1
{
t <- Sys.time()
for(i in 1:100000)
{
if(n == 0) {cat(.)}
}
cat(Sys.time() - t)
}
test <- function(n)
{
if(n == 0)
{
return()
}
test(n - 1)
}
{
t <- Sys.time()
test(100000)
cat(Sys.time() - t)
}
test(10000)
test(1000)
{
t <- Sys.time()
test(1000)
cat(Sys.time() - t)
}
{
t <- Sys.time()
for(i in 1:1000)
{
if(n == 0) {cat(.)}
}
cat(Sys.time() - t)
}
{
t <- Sys.time()
test(1000)
cat(Sys.time() - t)
}
{
t <- Sys.time()
test(2000)
cat(Sys.time() - t)
}
n <- 1
{
t <- Sys.time()
for(i in 1:2000)
{
if(n == 0) {cat(.)}
}
cat(Sys.time() - t)
}
{
t <- Sys.time()
for(i in 1:10000)
{
if(n == 0) {cat(.)}
}
cat(Sys.time() - t)
}
50*50
60*60
{
t <- Sys.time()
test(3600)
cat(Sys.time() - t)
}
{
t <- Sys.time()
test(3000)
cat(Sys.time() - t)
}
{
t <- Sys.time()
test(2500)
cat(Sys.time() - t)
}
test <- function(n)
{
if(n == 0)
{
return()
}
test(n - 1)
}
{
t <- Sys.time()
test(2500)
cat(Sys.time() - t)
}
{
t <- Sys.time()
test(2000)
cat(Sys.time() - t)
}
x <- 0.0026/2000
x
x* 60^3
x* 60^4
x* 60^5
?formula
formula(c(1,2,3))
formula(~c(1,2,3))
x <- formula(~c(1,2,3))
x <- ~c(1,2,3)
terms(~c(1,2,3))
terms(~(1,2,3))
terms(~c(1,2,3))
setwd("RNA-Seq/biomarker-retrieval/scripts/retrieval/files/")
check <- read.table(file = "tiling_array_expressions.txt", stringsAsFactors = FALSE)
View(check)
vals <- check[,13:ncol(vals)]
vals <- check[,13:ncol(check)]
vars <- rowVars(vals)
?rowMeans
?colVar
??colVar
??rowVars
library(genefilter)
vars <- rowVars(vals)
vals <- as.numeric(check[,13:ncol(check)])
vals <- as.matrix(check[,13:ncol(check)])
vals <- as.matrix(check[-1,13:ncol(check)])
View(vals)
vals <- check[-1,13:ncol(check)]
View(vals)
vals <- lapply(check[-1,13:ncol(check)], as.numeric)
vars <- rowVars(vals)
vals <- sapply(check[-1,13:ncol(check)], as.numeric)
vars <- rowVars(vals)
check[2,]
var(as.numeric(check[2,]))
as.numeric(check[2,])
as.numeric(check[2,-1:12])
as.numeric(check[2,-c(1:12)])
as.numeric(check[2,-(1:12)])
var(as.numeric(check[2,-(1:12)]))
check_name <- cbind(check[-1,1], vars)
check_name
check_name <- data.frame(check[-1,1], vars)
check_name
check_name ,- check_name[order(check_name[,2]),]
check_name <- check_name[order(check_name[,2]),]
View(check_name)
